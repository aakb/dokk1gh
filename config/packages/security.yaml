security:
    encoders:
        App\Entity\User:
            algorithm: auto

    role_hierarchy:
        ROLE_GUEST_ADMIN:    [ROLE_USER]
        ROLE_USER_ADMIN:     [ROLE_USER]
        ROLE_CONFIG_ADMIN:   [ROLE_USER]
        ROLE_TEMPLATE_ADMIN: [ROLE_USER]
        ROLE_ADMIN:          [ROLE_USER_ADMIN, ROLE_GUEST_ADMIN, ROLE_TEMPLATE_ADMIN]
        ROLE_SUPER_ADMIN:    [ROLE_ADMIN, ROLE_CONFIG_ADMIN]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # api:
        #     pattern: ^/api
        #     simple_preauth:
        #         authenticator: App\Security\ApiKeyAuthenticator
        #     provider: api_key_user_provider
        #     # @see https://symfony.com/doc/current/reference/configuration/security.html#firewall-context
        #     context: primary_auth
        #     logout_on_user_change: true

        mock:
            pattern: ^/mock
            security: false

        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\AppLoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/app, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/cms, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reset-password, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/admin, role: ROLE_ADMIN }
        - { path: ^/, role: ROLE_USER }
